import nodemailer from 'nodemailer';
import crypto from 'crypto';

export class EmailService {
  private transporter: nodemailer.Transporter;

  constructor() {
    this.transporter = nodemailer.createTransport({
      host: 'smtp.hostinger.com',
      port: 465,
      secure: true,
      auth: {
        user: 'noreply@cvera.net',
        pass: 'ilqarilqar1M@@'
      }
    });
  }

  // Generate secure reset token
  generateResetToken(): string {
    return crypto.randomBytes(32).toString('hex');
  }

  // Send forgot password email
  async sendForgotPasswordEmail(userEmail: string, userName: string, resetToken: string) {
    try {
      const resetLink = `${process.env.NEXT_PUBLIC_BASE_URL || 'https://cvera.net'}/auth/reset-password?token=${resetToken}`;

      const emailHTML = `
        <!DOCTYPE html>
        <html lang="az">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>≈ûifr…ô Yenil…ôm…ô - CVERA</title>
            <style>
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                    line-height: 1.6; 
                    color: #333; 
                    max-width: 600px; 
                    margin: 0 auto; 
                    padding: 20px; 
                    background-color: #f8fafc;
                }
                .container { 
                    background: #ffffff; 
                    border-radius: 12px; 
                    padding: 40px; 
                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                    border: 1px solid #e2e8f0;
                }
                .header { 
                    text-align: center; 
                    margin-bottom: 30px; 
                    border-bottom: 2px solid #2563eb;
                    padding-bottom: 20px;
                }
                .logo { 
                    font-size: 28px; 
                    font-weight: bold; 
                    color: #2563eb; 
                    margin-bottom: 10px;
                }
                .subtitle {
                    color: #64748b;
                    font-size: 16px;
                }
                .content {
                    margin: 30px 0;
                }
                .button { 
                    display: inline-block; 
                    background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
                    color: white; 
                    padding: 15px 30px; 
                    text-decoration: none; 
                    border-radius: 8px; 
                    font-weight: bold; 
                    margin: 25px 0;
                    box-shadow: 0 2px 4px rgba(37, 99, 235, 0.3);
                    transition: all 0.3s ease;
                }
                .warning { 
                    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
                    border-left: 4px solid #f59e0b; 
                    color: #92400e; 
                    padding: 20px; 
                    border-radius: 8px; 
                    margin: 25px 0;
                }
                .security-note {
                    background: #f1f5f9;
                    border-left: 4px solid #64748b;
                    padding: 15px;
                    border-radius: 6px;
                    margin: 20px 0;
                    font-size: 14px;
                    color: #475569;
                }
                .footer {
                    text-align: center;
                    margin-top: 40px;
                    padding-top: 20px;
                    border-top: 1px solid #e2e8f0;
                    color: #64748b;
                    font-size: 14px;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">CVERA</div>
                    <h1 style="color: #1e293b; margin: 20px 0 0 0;">≈ûifr…ô Yenil…ôm…ô</h1>
                </div>
                
                <div class="content">
                    <p style="font-size: 16px;">Salam <strong>${userName || userEmail}</strong>,</p>
                    
                    <p>CVERA hesabƒ±nƒ±z √º√ß√ºn ≈üifr…ô yenil…ôm…ô t…ôl…ôbi aldƒ±q. ≈ûifr…ônizi yenil…ôm…ôk √º√ß√ºn a≈üaƒüƒ±dakƒ± link…ô klik edin:</p>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${resetLink}" class="button" style="color:white">üîê ≈ûifr…ôni Yenil…ô</a>
                    </div>
                    
                    <div class="warning">
                        <strong>‚è∞ Vaxt m…ôhdudiyy…ôti:</strong> Bu link yalnƒ±z <strong>1 saat</strong> …ôrzind…ô etibarlƒ±dƒ±r v…ô yalnƒ±z bir d…ôf…ô istifad…ô edil…ô bil…ôr.
                    </div>
                    
                    <div class="security-note">
                        <strong>üõ°Ô∏è T…ôhl√ºk…ôsizlik m…ôlumatƒ±:</strong><br>
                        ‚Ä¢ ∆èg…ôr bu t…ôl…ôbi siz etm…ômisinizs…ô, bu e-po√ßtu n…ôz…ôr…ô almayƒ±n<br>
                        ‚Ä¢ ≈ûifr…ônizi he√ß vaxt ba≈üqa ≈ü…ôxsl…ôrl…ô payla≈ümayƒ±n<br>
                        ‚Ä¢ ≈û√ºbh…ôli f…ôaliyy…ôt g√∂rd√ºkd…ô d…ôrhal biz…ô m√ºraci…ôt edin
                    </div>
                    
                    <p>CVERA komandasƒ± olaraq hesabƒ±nƒ±zƒ±n t…ôhl√ºk…ôsizliyini qorumaq bizim …ôsas prioritetimizdir.</p>
                </div>
                
                <div class="footer">
                    <p><strong>CVERA</strong> - Pe≈ü…ôkar karyeranƒ±zƒ±n ba≈ülanƒüƒ±cƒ±</p>
                    <p>¬© 2025 CVERA. B√ºt√ºn h√ºquqlar qorunur.</p>
                    <p style="font-size: 12px; margin-top: 15px;">
                        Bu e-po√ßt avtomatik olaraq g√∂nd…ôrilmi≈üdir. Bu email…ô cavab verm…ôyin.
                    </p>
                </div>
            </div>
        </body>
        </html>
      `;

      const textVersion = `
CVERA - ≈ûifr…ô Yenil…ôm…ô T…ôl…ôbi

Salam ${userName || userEmail},

CVERA hesabƒ±nƒ±z √º√ß√ºn ≈üifr…ô yenil…ôm…ô t…ôl…ôbi aldƒ±q.

≈ûifr…ônizi yenil…ôm…ôk √º√ß√ºn bu link…ô basƒ±n: ${resetLink}

DIQQ∆èT: Bu link yalnƒ±z 1 saat …ôrzind…ô etibarlƒ±dƒ±r.

∆èg…ôr bu t…ôl…ôbi siz etm…ômisinizs…ô, bu e-po√ßtu n…ôz…ôr…ô almayƒ±n.

¬© 2025 CVERA
Bu e-po√ßt avtomatik olaraq g√∂nd…ôrilmi≈üdir.
      `;

      const mailOptions = {
        from: {
          name: 'CVERA Support',
          address: 'noreply@cvera.net'
        },
        to: userEmail,
        subject: 'üîê CVERA - ≈ûifr…ô Yenil…ôm…ô T…ôl…ôbi',
        html: emailHTML,
        text: textVersion,
        headers: {
          'X-Priority': '1',
          'X-MSMail-Priority': 'High',
          'Importance': 'high'
        }
      };

      const result = await this.transporter.sendMail(mailOptions);

      console.log(`‚úÖ Forgot password email sent to ${userEmail}`);
      console.log(`üìß Message ID: ${result.messageId}`);

      return {
        success: true,
        messageId: result.messageId,
        resetToken: resetToken
      };

    } catch (error: any) {
      console.error(`‚ùå Failed to send forgot password email to ${userEmail}:`, error.message);

      return {
        success: false,
        error: error.message
      };
    }
  }

  // Send password reset confirmation email
  async sendPasswordResetConfirmation(userEmail: string, userName: string) {
    try {
      const emailHTML = `
        <!DOCTYPE html>
        <html lang="az">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>≈ûifr…ô Uƒüurla Yenil…ôndi - CVERA</title>
            <style>
                body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8fafc; }
                .container { background: #ffffff; border-radius: 12px; padding: 40px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border: 1px solid #e2e8f0; }
                .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #10b981; padding-bottom: 20px; }
                .logo { font-size: 28px; font-weight: bold; color: #2563eb; margin-bottom: 10px; }
                .success-icon { font-size: 48px; color: #10b981; margin: 20px 0; }
                .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e2e8f0; color: #64748b; font-size: 14px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">CVERA</div>
                    <div class="success-icon">‚úÖ</div>
                    <h1 style="color: #10b981;">≈ûifr…ôniz Uƒüurla Yenil…ôndi</h1>
                </div>
                
                <p>Salam <strong>${userName || userEmail}</strong>,</p>
                
                <p>CVERA hesabƒ±nƒ±zƒ±n ≈üifr…ôsi uƒüurla yenil…ôndi. ƒ∞ndi yeni ≈üifr…ônizl…ô hesabƒ±nƒ±za daxil ola bil…ôrsiniz.</p>
                
                <p>∆èg…ôr bu d…ôyi≈üikliyi siz etm…ômisinizs…ô, d…ôrhal biz…ô m√ºraci…ôt edin.</p>
                
                <div class="footer">
                    <p><strong>CVERA</strong> - Pe≈ü…ôkar karyeranƒ±zƒ±n ba≈ülanƒüƒ±cƒ±</p>
                    <p>¬© 2025 CVERA. B√ºt√ºn h√ºquqlar qorunur.</p>
                </div>
            </div>
        </body>
        </html>
      `;

      const mailOptions = {
        from: {
          name: 'CVERA Support',
          address: 'noreply@cvera.net'
        },
        to: userEmail,
        subject: '‚úÖ CVERA - ≈ûifr…ôniz Uƒüurla Yenil…ôndi',
        html: emailHTML
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ Password reset confirmation sent to ${userEmail}`);

      return { success: true, messageId: result.messageId };

    } catch (error: any) {
      console.error(`‚ùå Failed to send confirmation email to ${userEmail}:`, error.message);
      return { success: false, error: error.message };
    }
  }

  // Send email verification for registration
  async sendEmailVerification(userEmail: string, userName: string, verificationToken: string) {
    try {
      const verificationLink = `${process.env.NEXT_PUBLIC_BASE_URL || 'https://cvera.net'}/auth/verify-email?token=${verificationToken}`;

      const emailHTML = `
        <!DOCTYPE html>
        <html lang="az">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Email T…ôsdiqi - CVera</title>
            <style>
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                    line-height: 1.6; 
                    color: #333; 
                    max-width: 600px; 
                    margin: 0 auto; 
                    padding: 20px; 
                    background-color: #f8fafc;
                }
                .container { 
                    background: #ffffff; 
                    border-radius: 12px; 
                    padding: 40px; 
                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                    border: 1px solid #e2e8f0;
                }
                .header { 
                    text-align: center; 
                    margin-bottom: 30px; 
                    border-bottom: 2px solid #2563eb;
                    padding-bottom: 20px;
                }
                .logo { 
                    font-size: 28px; 
                    font-weight: bold; 
                    color: #2563eb; 
                    margin-bottom: 10px;
                }
                .subtitle {
                    color: #64748b;
                    font-size: 16px;
                }
                .welcome-icon {
                    font-size: 48px;
                    color: #2563eb;
                    margin: 20px 0;
                }
                .content {
                    margin: 30px 0;
                }
                .button { 
                    display: inline-block; 
                    background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
                    color: white; 
                    padding: 15px 30px; 
                    text-decoration: none; 
                    border-radius: 8px; 
                    font-weight: bold; 
                    margin: 25px 0;
                    box-shadow: 0 2px 4px rgba(37, 99, 235, 0.3);
                    transition: all 0.3s ease;
                }
                .warning { 
                    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
                    border-left: 4px solid #f59e0b; 
                    color: #92400e; 
                    padding: 20px; 
                    border-radius: 8px; 
                    margin: 25px 0;
                }
                .features {
                    background: #f1f5f9;
                    border-radius: 8px;
                    padding: 20px;
                    margin: 20px 0;
                }
                .feature-item {
                    display: flex;
                    align-items: center;
                    margin: 10px 0;
                }
                .feature-icon {
                    color: #2563eb;
                    margin-right: 10px;
                    font-weight: bold;
                }
                .footer {
                    text-align: center;
                    margin-top: 40px;
                    padding-top: 20px;
                    border-top: 1px solid #e2e8f0;
                    color: #64748b;
                    font-size: 14px;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">CVera</div>
                    <div class="subtitle">Pe≈ü…ôkar CV Yaradƒ±cƒ±sƒ±</div>
                    <div class="welcome-icon">üéâ</div>
                    <h1 style="color: #1e293b; margin: 20px 0 0 0;">Xo≈ü G…ôlmisiniz!</h1>
                </div>
                
                <div class="content">
                    <p style="font-size: 16px;">Salam <strong>${userName || userEmail}</strong>,</p>
                    
                    <p>CVera ail…ôsin…ô xo≈ü g…ôlmisiniz! Hesabƒ±nƒ±zƒ± aktivl…ô≈üdirm…ôk √º√ß√ºn email √ºnvanƒ±nƒ±zƒ± t…ôsdiql…ôm…ôk lazƒ±mdƒ±r.</p>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${verificationLink}" class="button">‚úâÔ∏è Email √únvanƒ±mƒ± T…ôsdiql…ô</a>
                    </div>
                    
                    <div class="warning">
                        <strong>‚è∞ Vaxt m…ôhdudiyy…ôti:</strong> Bu t…ôsdiql…ôm…ô linki <strong>24 saat</strong> …ôrzind…ô etibarlƒ±dƒ±r.
                    </div>
                    
                    <div class="features">
                        <h3 style="color: #1e293b; margin-bottom: 15px;">CVera il…ô n…ôl…ôr ed…ô bil…ôrsiniz:</h3>
                        <div class="feature-item">
                            <span class="feature-icon">‚ú®</span>
                            <span>Pe≈ü…ôkar CV-l…ôr yaradƒ±n</span>
                        </div>
                        <div class="feature-item">
                            <span class="feature-icon">üîó</span>
                            <span>LinkedIn profilini avtomatik import edin</span>
                        </div>
                        <div class="feature-item">
                            <span class="feature-icon">üì±</span>
                            <span>M√ºxt…ôlif template-l…ôrd…ôn se√ßim edin</span>
                        </div>
                        <div class="feature-item">
                            <span class="feature-icon">üìÑ</span>
                            <span>PDF v…ô DOCX formatƒ±nda y√ºkl…ôyin</span>
                        </div>
                        <div class="feature-item">
                            <span class="feature-icon">ü§ñ</span>
                            <span>AI il…ô professional x√ºlas…ô yaradƒ±n</span>
                        </div>
                    </div>
                    
                    <p>Email √ºnvanƒ±nƒ±zƒ± t…ôsdiql…ôdikd…ôn sonra d…ôrhal hesabƒ±nƒ±za daxil olub pe≈ü…ôkar CV yaratmaƒüa ba≈ülaya bil…ôrsiniz!</p>
                    
                    <p style="font-size: 14px; color: #64748b;">
                        ∆èg…ôr yuxarƒ±dakƒ± d√ºym…ô i≈ül…ômirs…ô, bu linki kopyalayƒ±b brauzeriniz…ô yapƒ±≈üdƒ±rƒ±n:<br>
                        <code style="background: #f1f5f9; padding: 5px; border-radius: 4px; word-break: break-all;">${verificationLink}</code>
                    </p>
                </div>
                
                <div class="footer">
                    <p><strong>CVera</strong> - Pe≈ü…ôkar karyeranƒ±zƒ±n ba≈ülanƒüƒ±cƒ±</p>
                    <p>¬© 2025 CVera. B√ºt√ºn h√ºquqlar qorunur.</p>
                    <p style="font-size: 12px; margin-top: 15px;">
                        Bu email avtomatik olaraq g√∂nd…ôrilmi≈üdir. Bu email…ô cavab verm…ôyin.
                    </p>
                </div>
            </div>
        </body>
        </html>
      `;

      const textVersion = `
CVera - Email T…ôsdiqi

Salam ${userName || userEmail},

CVera ail…ôsin…ô xo≈ü g…ôlmisiniz!

Hesabƒ±nƒ±zƒ± aktivl…ô≈üdirm…ôk √º√ß√ºn bu link…ô basƒ±n: ${verificationLink}

DIQQ∆èT: Bu link 24 saat …ôrzind…ô etibarlƒ±dƒ±r.

CVera il…ô:
- Pe≈ü…ôkar CV-l…ôr yaradƒ±n
- LinkedIn profilini import edin  
- M√ºxt…ôlif template-l…ôrd…ôn istifad…ô edin
- PDF v…ô DOCX formatƒ±nda y√ºkl…ôyin

¬© 2025 CVera
Bu email avtomatik olaraq g√∂nd…ôrilmi≈üdir.
      `;

      const mailOptions = {
        from: {
          name: 'CVera Support',
          address: 'noreply@cvera.net'
        },
        to: userEmail,
        subject: 'üéâ CVera-ya Xo≈ü G…ôlmisiniz - Email T…ôsdiqi',
        html: emailHTML,
        text: textVersion,
        headers: {
          'X-Priority': '1',
          'X-MSMail-Priority': 'High',
          'Importance': 'high'
        }
      };

      const result = await this.transporter.sendMail(mailOptions);

      console.log(`‚úÖ Email verification sent to ${userEmail}`);
      console.log(`üìß Message ID: ${result.messageId}`);

      return {
        success: true,
        messageId: result.messageId
      };

    } catch (error: any) {
      console.error(`‚ùå Failed to send email verification to ${userEmail}:`, error.message);

      return {
        success: false,
        error: error.message
      };
    }
  }

  // Send welcome email after successful verification
  async sendWelcomeEmail(userEmail: string, userName: string) {
    try {
      const emailHTML = `
        <!DOCTYPE html>
        <html lang="az">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Hesab Aktivl…ô≈üdirildi - CVera</title>
            <style>
                body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8fafc; }
                .container { background: #ffffff; border-radius: 12px; padding: 40px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border: 1px solid #e2e8f0; }
                .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #10b981; padding-bottom: 20px; }
                .logo { font-size: 28px; font-weight: bold; color: #2563eb; margin-bottom: 10px; }
                .success-icon { font-size: 48px; color: #10b981; margin: 20px 0; }
                .cta-button { display: inline-block; background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: bold; margin: 25px 0; }
                .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e2e8f0; color: #64748b; font-size: 14px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">CVera</div>
                    <div class="success-icon">üéä</div>
                    <h1 style="color: #10b981;">Hesabƒ±nƒ±z Uƒüurla Aktivl…ô≈üdirildi!</h1>
                </div>
                
                <p>Salam <strong>${userName || userEmail}</strong>,</p>
                
                <p>T…ôbrikl…ôr! Email √ºnvanƒ±nƒ±z uƒüurla t…ôsdiql…ôndi v…ô hesabƒ±nƒ±z aktiv edildi. ƒ∞ndi CVera-nƒ±n b√ºt√ºn x√ºsusiyy…ôtl…ôrind…ôn istifad…ô ed…ô bil…ôrsiniz.</p>
                
                <div style="text-align: center; margin: 30px 0;">
                    <a href="${process.env.NEXT_PUBLIC_BASE_URL || 'https://cvera.net'}/auth/login" class="cta-button">üöÄ ƒ∞lk CV-mi Yaratmaƒüa Ba≈üla</a>
                </div>
                
                <p>H…ôr hansƒ± sualƒ±nƒ±z varsa, biz…ô m√ºraci…ôt etm…ôkd…ôn √ß…ôkinm…ôyin.</p>
                
                <div class="footer">
                    <p><strong>CVera</strong> - Pe≈ü…ôkar karyeranƒ±zƒ±n ba≈ülanƒüƒ±cƒ±</p>
                    <p>¬© 2025 CVera. B√ºt√ºn h√ºquqlar qorunur.</p>
                </div>
            </div>
        </body>
        </html>
      `;

      const mailOptions = {
        from: {
          name: 'CVera Support',
          address: 'noreply@cvera.net'
        },
        to: userEmail,
        subject: 'üéä Hesabƒ±nƒ±z Aktivl…ô≈üdirildi - CVera',
        html: emailHTML
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ Welcome email sent to ${userEmail}`);

      return { success: true, messageId: result.messageId };

    } catch (error: any) {
      console.error(`‚ùå Failed to send welcome email to ${userEmail}:`, error.message);
      return { success: false, error: error.message };
    }
  }

  // Test email configuration
  async testConnection(): Promise<boolean> {
    try {
      await this.transporter.verify();
      console.log('‚úÖ Email transporter connection successful');
      return true;
    } catch (error: any) {
      console.error('‚ùå Email transporter connection failed:', error.message);
      return false;
    }
  }
}
