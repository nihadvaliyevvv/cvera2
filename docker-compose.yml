version: '3.8'

services:
  # Main application
  cvera-app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://cvera_user:cvera_password@db:5432/cvera_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - uploads:/tmp/cvera-uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cvera_db
      - POSTGRES_USER=cvera_user
      - POSTGRES_PASSWORD=cvera_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cvera_user -d cvera_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - static_files:/var/www/static
    depends_on:
      - cvera-app
    restart: unless-stopped

  # Database backup service
  db-backup:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cvera_db
      - POSTGRES_USER=cvera_user
      - POSTGRES_PASSWORD=cvera_password
    volumes:
      - postgres_backups:/backups
    command: >
      sh -c "
        while true; do
          pg_dump -h db -U cvera_user cvera_db > /backups/backup_$(date +%Y%m%d_%H%M%S).sql
          find /backups -name '*.sql' -mtime +7 -delete
          sleep 86400
        done
      "
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  postgres_backups:
  uploads:
  static_files:

networks:
  default:
    driver: bridge
